// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.chariot.lunchlearn.testingtalk.web;

import com.chariot.lunchlearn.testingtalk.model.Offering;
import com.chariot.lunchlearn.testingtalk.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Offering, String> ApplicationConversionServiceFactoryBean.getOfferingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.chariot.lunchlearn.testingtalk.model.Offering, java.lang.String>() {
            public String convert(Offering offering) {
                return new StringBuilder().append(offering.getOfferingDate()).append(' ').append(offering.getOfferingPrice()).append(' ').append(offering.getMaxCapacity()).toString();
            }
        };
    }
    
    public Converter<String, Offering> ApplicationConversionServiceFactoryBean.getStringToOfferingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.chariot.lunchlearn.testingtalk.model.Offering>() {
            public com.chariot.lunchlearn.testingtalk.model.Offering convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Offering.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getOfferingToStringConverter());
        registry.addConverter(getStringToOfferingConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
